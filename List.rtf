{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Unit Converter (name):\
-This app will focus on conversions for various things and metric.\
-Personally I want to go a bit beyond what is assign to me, so instead of picking one type of unit converter\'85 I am planning to utilize multiple storyboards/view controller to create a unit converter for both measurements and currency.\
-Include conversions for pounds to kilograms, gallons to liters, meters to miles, meters to the other metric units, inches to yards, and inches to centimeters.  Also currency to convert USD to various other popular currency like peso, rupees, and CAD.\
-I also will create a unique and dynamic and colorful User interface. A friendly UI so anyone can use this app.\
-My app will have multiple view controllers, and a navigation controller to navigate between view controllers. I may also utilize a tab bar controller, if I am planning to have multiple storyboards.\
-I will have various objects on the UI, such as text field for the user input. Buttons for IBActions such as for computation. Tab bar button for navigating.\
\
\
Prioritize:\
-Multiple View Controllers and a tab bar controller so we can have one storyboard for each different conversions\
-Unique and dynamic UI\
-Proper code\
\
MVP:\
-Allow user to choose how they convert their info. Instead of giving them options.\
-Allow them to add in their own conversion factors}